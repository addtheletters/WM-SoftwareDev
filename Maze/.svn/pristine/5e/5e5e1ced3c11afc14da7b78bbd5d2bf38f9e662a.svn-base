<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_71) on Sun Jun 19 23:47:16 EDT 2016 -->
<title>TestOrder</title>
<meta name="date" content="2016-06-19">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="TestOrder";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TestOrder.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/MazeFactoryTest.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/TestOrder.html" target="_top">Frames</a></li>
<li><a href="TestOrder.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">generation</div>
<h2 title="Class TestOrder" class="title">Class TestOrder</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>generation.TestOrder</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>generation.Order</dd>
</dl>
<hr>
<br>
<pre>public class <span class="typeNameLabel">TestOrder</span>
extends java.lang.Object
implements generation.Order</pre>
<div class="block">Stub testing class for validating the function of factories and maze builders.</div>
<dl>
<dt><span class="simpleTagLabel">Author:</span></dt>
<dd>Ben Zhang</dd>
</dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<ul class="blockList">
<li class="blockList"><a name="nested.classes.inherited.from.class.generation.Order">
<!--   -->
</a>
<h3>Nested classes/interfaces inherited from interface&nbsp;generation.Order</h3>
<code>generation.Order.Builder</code></li>
</ul>
</li>
</ul>
<!-- =========== FIELD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Field Summary table, listing fields, and an explanation">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Field and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>generation.Order.Builder</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#builder">builder</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#delivered">delivered</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#perfect">perfect</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private generation.MazeConfiguration</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#result">result</a></span></code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#skill">skill</a></span></code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>private static boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#SUPPRESS_PRINT">SUPPRESS_PRINT</a></span></code>
<div class="block">Debug constant to enable or disable printing from this class.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#TestOrder-int-generation.Order.Builder-boolean-">TestOrder</a></span>(int&nbsp;skill,
         generation.Order.Builder&nbsp;builder,
         boolean&nbsp;perfect)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#deliver-generation.MazeConfiguration-">deliver</a></span>(generation.MazeConfiguration&nbsp;mazeConfig)</code>
<div class="block">Delivers the produced maze.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>generation.Order.Builder</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#getBuilder--">getBuilder</a></span>()</code>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>generation.MazeConfiguration</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#getResult--">getResult</a></span>()</code>
<div class="block">Returns the delivered resulting maze configuration of this order.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#getSkillLevel--">getSkillLevel</a></span>()</code>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#isDelivered--">isDelivered</a></span>()</code>
<div class="block">Returns status of this order's delivery.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#isPerfect--">isPerfect</a></span>()</code>
<div class="block">Describes if the ordered maze should be perfect, i.e.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="../generation/TestOrder.html#updateProgress-int-">updateProgress</a></span>(int&nbsp;percentage)</code>
<div class="block">Provides an update on the progress being made on 
 the maze production.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<ul class="blockList">
<li class="blockList"><a name="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a name="SUPPRESS_PRINT">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>SUPPRESS_PRINT</h4>
<pre>private static final&nbsp;boolean SUPPRESS_PRINT</pre>
<div class="block">Debug constant to enable or disable printing from this class.</div>
<dl>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../constant-values.html#generation.TestOrder.SUPPRESS_PRINT">Constant Field Values</a></dd>
</dl>
</li>
</ul>
<a name="skill">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>skill</h4>
<pre>public&nbsp;int skill</pre>
</li>
</ul>
<a name="builder">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>builder</h4>
<pre>public&nbsp;generation.Order.Builder builder</pre>
</li>
</ul>
<a name="perfect">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>perfect</h4>
<pre>public&nbsp;boolean perfect</pre>
</li>
</ul>
<a name="delivered">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>delivered</h4>
<pre>private&nbsp;boolean delivered</pre>
</li>
</ul>
<a name="result">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>result</h4>
<pre>private&nbsp;generation.MazeConfiguration result</pre>
</li>
</ul>
</li>
</ul>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="TestOrder-int-generation.Order.Builder-boolean-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>TestOrder</h4>
<pre>public&nbsp;TestOrder(int&nbsp;skill,
                 generation.Order.Builder&nbsp;builder,
                 boolean&nbsp;perfect)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getSkillLevel--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSkillLevel</h4>
<pre>public&nbsp;int&nbsp;getSkillLevel()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code>generation.Order</code></span></div>
<div class="block">Gives the required skill level, range of values 0,1,2,...,15</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>getSkillLevel</code>&nbsp;in interface&nbsp;<code>generation.Order</code></dd>
</dl>
</li>
</ul>
<a name="getBuilder--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getBuilder</h4>
<pre>public&nbsp;generation.Order.Builder&nbsp;getBuilder()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code>generation.Order</code></span></div>
<div class="block">Gives the requested builder algorithm, possible values 
 are listed in the Builder enum type.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>getBuilder</code>&nbsp;in interface&nbsp;<code>generation.Order</code></dd>
</dl>
</li>
</ul>
<a name="isPerfect--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isPerfect</h4>
<pre>public&nbsp;boolean&nbsp;isPerfect()</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code>generation.Order</code></span></div>
<div class="block">Describes if the ordered maze should be perfect, i.e. there are 
 no loops and no isolated areas, which also implies that 
 there are no rooms as rooms can imply loops</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>isPerfect</code>&nbsp;in interface&nbsp;<code>generation.Order</code></dd>
</dl>
</li>
</ul>
<a name="getResult--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getResult</h4>
<pre>public&nbsp;generation.MazeConfiguration&nbsp;getResult()</pre>
<div class="block">Returns the delivered resulting maze configuration of this order.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the resulting maze from a successfully delivered order. If the order has yet to be delivered or failed, returns null.</dd>
</dl>
</li>
</ul>
<a name="isDelivered--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isDelivered</h4>
<pre>public&nbsp;boolean&nbsp;isDelivered()</pre>
<div class="block">Returns status of this order's delivery.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true after the order has been successfully delivered; false otherwise.</dd>
</dl>
</li>
</ul>
<a name="deliver-generation.MazeConfiguration-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deliver</h4>
<pre>public&nbsp;void&nbsp;deliver(generation.MazeConfiguration&nbsp;mazeConfig)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code>generation.Order</code></span></div>
<div class="block">Delivers the produced maze. 
 This method is called by the factory to provide the 
 resulting maze as a MazeConfiguration.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>deliver</code>&nbsp;in interface&nbsp;<code>generation.Order</code></dd>
</dl>
</li>
</ul>
<a name="updateProgress-int-">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>updateProgress</h4>
<pre>public&nbsp;void&nbsp;updateProgress(int&nbsp;percentage)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from interface:&nbsp;<code>generation.Order</code></span></div>
<div class="block">Provides an update on the progress being made on 
 the maze production. This method is called occasionally
 during production, there is no guarantee on particular values.
 Percentage will be delivered in monotonously increasing order,
 the last call is with a value of 100 after delivery of product.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code>updateProgress</code>&nbsp;in interface&nbsp;<code>generation.Order</code></dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/TestOrder.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="../generation/MazeFactoryTest.html" title="class in generation"><span class="typeNameLink">Prev&nbsp;Class</span></a></li>
<li>Next&nbsp;Class</li>
</ul>
<ul class="navList">
<li><a href="../index.html?generation/TestOrder.html" target="_top">Frames</a></li>
<li><a href="TestOrder.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
