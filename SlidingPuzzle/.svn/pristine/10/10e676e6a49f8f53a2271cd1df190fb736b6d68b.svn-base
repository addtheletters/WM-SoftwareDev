<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_71) on Wed Jun 01 20:07:51 EDT 2016 -->
<title>S-Index</title>
<meta name="date" content="2016-06-01">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="S-Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">Package</a></li>
<li>Class</li>
<li>Use</li>
<li><a href="../edu/wm/cs/cs301/slidingpuzzle/package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-14.html">Prev Letter</a></li>
<li><a href="index-16.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-15.html" target="_top">Frames</a></li>
<li><a href="index-15.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="index-1.html">A</a>&nbsp;<a href="index-2.html">C</a>&nbsp;<a href="index-3.html">D</a>&nbsp;<a href="index-4.html">E</a>&nbsp;<a href="index-5.html">F</a>&nbsp;<a href="index-6.html">G</a>&nbsp;<a href="index-7.html">H</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">L</a>&nbsp;<a href="index-10.html">M</a>&nbsp;<a href="index-11.html">N</a>&nbsp;<a href="index-12.html">O</a>&nbsp;<a href="index-13.html">P</a>&nbsp;<a href="index-14.html">R</a>&nbsp;<a href="index-15.html">S</a>&nbsp;<a href="index-16.html">T</a>&nbsp;<a href="index-17.html">V</a>&nbsp;<a href="index-18.html">W</a>&nbsp;<a name="I:S">
<!--   -->
</a>
<h2 class="title">S</h2>
<dl>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#selectedsquare">selectedsquare</a></span> - Variable in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#serialVersionUID">serialVersionUID</a></span> - Static variable in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#setDimensions--">setDimensions()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">Sets dimensions to default values.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#setFinalState--">setFinalState()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">Initializes or resets the field finalState.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#setImageForValue-int-java.awt.image.BufferedImage-">setImageForValue(int, BufferedImage)</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">For a tile with the given value, this method stores the corresponding image.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleState.html#setToInitialState-int-int-">setToInitialState(int, int)</a></span> - Method in interface edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleState.html" title="interface in edu.wm.cs.cs301.slidingpuzzle">PuzzleState</a></dt>
<dd>
<div class="block">Sets or resets PuzzleState object to the initial (final) state of a game
 with the given dimension and number of empty slots.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#setToInitialState-int-int-">setToInitialState(int, int)</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStateTest.html#setUp--">setUp()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStateTest.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleStateTest</a></dt>
<dd>
<div class="block">Junit calls this method automatically each time before executing a method tagged as a test.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#setUpImages-java.awt.image.BufferedImage-">setUpImages(BufferedImage)</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">Split image into a 16 square fragments for a 4 x 4 board.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#setupMenuBar--">setupMenuBar()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">Fills the menubar with pulldown menus for filehandling, 
 organizing the board, setting visibility of lines and numbers
 This object serves as the one and only listener for all menu items.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#shuffleBoard--">shuffleBoard()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>
<div class="block">Perform a number of random flips between tiles to start the game.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleState.html#shuffleBoard-int-">shuffleBoard(int)</a></span> - Method in interface edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleState.html" title="interface in edu.wm.cs.cs301.slidingpuzzle">PuzzleState</a></dt>
<dd>
<div class="block">Creates a random path from this state to the newly generated returned state
 that has the given length.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#shuffleBoard-int-">shuffleBoard(int)</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle"><span class="typeNameLink">SimplePuzzleState</span></a> - Class in <a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">edu.wm.cs.cs301.slidingpuzzle</a></dt>
<dd>
<div class="block">A simple implementation of PuzzleState.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#SimplePuzzleState--">SimplePuzzleState()</a></span> - Constructor for class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>
<div class="block">Constructs a SimplePuzzleState with null internals.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#SimplePuzzleState-int-int-">SimplePuzzleState(int, int)</a></span> - Constructor for class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>
<div class="block">Constructs and initializes a SimplePuzzleState using the provided dimensions and number of empty slots.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#SimplePuzzleState-edu.wm.cs.cs301.slidingpuzzle.SimplePuzzleState-int:A:A-edu.wm.cs.cs301.slidingpuzzle.PuzzleState.Operation-">SimplePuzzleState(SimplePuzzleState, int[][], PuzzleState.Operation)</a></span> - Constructor for class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>
<div class="block">Constructs a SimplePuzzleState descendant from a previous state</div>
</dd>
<dt><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.Move.html" title="class in edu.wm.cs.cs301.slidingpuzzle"><span class="typeNameLink">SimplePuzzleState.Move</span></a> - Class in <a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">edu.wm.cs.cs301.slidingpuzzle</a></dt>
<dd>
<div class="block">Utility class to make shuffling easier</div>
</dd>
<dt><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.Pair.html" title="class in edu.wm.cs.cs301.slidingpuzzle"><span class="typeNameLink">SimplePuzzleState.Pair</span></a> - Class in <a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">edu.wm.cs.cs301.slidingpuzzle</a></dt>
<dd>
<div class="block">Utility class to simplify BFS and shuffling code</div>
</dd>
<dt><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStatePathfindTest.html" title="class in edu.wm.cs.cs301.slidingpuzzle"><span class="typeNameLink">SimplePuzzleStatePathfindTest</span></a> - Class in <a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">edu.wm.cs.cs301.slidingpuzzle</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStatePathfindTest.html#SimplePuzzleStatePathfindTest--">SimplePuzzleStatePathfindTest()</a></span> - Constructor for class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStatePathfindTest.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleStatePathfindTest</a></dt>
<dd>&nbsp;</dd>
<dt><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStateTest.html" title="class in edu.wm.cs.cs301.slidingpuzzle"><span class="typeNameLink">SimplePuzzleStateTest</span></a> - Class in <a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">edu.wm.cs.cs301.slidingpuzzle</a></dt>
<dd>
<div class="block">Junit test cases for SimplePuzzleState implementation of PuzzleState interface.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStateTest.html#SimplePuzzleStateTest--">SimplePuzzleStateTest()</a></span> - Constructor for class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleStateTest.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleStateTest</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#solveAStar--">solveAStar()</a></span> - Method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>
<div class="block">Uses the heuristic provided by <a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#correctness--"><code>SimplePuzzleState.correctness()</code></a> and searches for a solution to the current puzzle state.</div>
</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html#state">state</a></span> - Variable in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/PuzzleGameGUI.html" title="class in edu.wm.cs.cs301.slidingpuzzle">PuzzleGameGUI</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html#swap-int:A:A-int-int-int-int-">swap(int[][], int, int, int, int)</a></span> - Static method in class edu.wm.cs.cs301.slidingpuzzle.<a href="../edu/wm/cs/cs301/slidingpuzzle/SimplePuzzleState.html" title="class in edu.wm.cs.cs301.slidingpuzzle">SimplePuzzleState</a></dt>
<dd>
<div class="block">Returns an altered version of the original matrix with the values at (row1, col1) and (row2, col2) swapped.</div>
</dd>
</dl>
<a href="index-1.html">A</a>&nbsp;<a href="index-2.html">C</a>&nbsp;<a href="index-3.html">D</a>&nbsp;<a href="index-4.html">E</a>&nbsp;<a href="index-5.html">F</a>&nbsp;<a href="index-6.html">G</a>&nbsp;<a href="index-7.html">H</a>&nbsp;<a href="index-8.html">I</a>&nbsp;<a href="index-9.html">L</a>&nbsp;<a href="index-10.html">M</a>&nbsp;<a href="index-11.html">N</a>&nbsp;<a href="index-12.html">O</a>&nbsp;<a href="index-13.html">P</a>&nbsp;<a href="index-14.html">R</a>&nbsp;<a href="index-15.html">S</a>&nbsp;<a href="index-16.html">T</a>&nbsp;<a href="index-17.html">V</a>&nbsp;<a href="index-18.html">W</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../edu/wm/cs/cs301/slidingpuzzle/package-summary.html">Package</a></li>
<li>Class</li>
<li>Use</li>
<li><a href="../edu/wm/cs/cs301/slidingpuzzle/package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li><a href="index-14.html">Prev Letter</a></li>
<li><a href="index-16.html">Next Letter</a></li>
</ul>
<ul class="navList">
<li><a href="../index.html?index-files/index-15.html" target="_top">Frames</a></li>
<li><a href="index-15.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
